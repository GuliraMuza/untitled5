create type Gender as enum ('Female','Male');
create type MaritalStatus as enum ('Married', 'Single', 'Widow', 'Divorced');
create type HouseType as enum ( 'House',' Apartment');


alter table rent_info
    add column check_in date;
alter table rent_info
    add column check_out date;
alter table owners
    add unique (email);
alter table customers
    add unique (email);
alter table agencies
    add constraint name check ( not null );






--Owner,customer,house,agency,rent_info
-- 1. Owner_лердин аттарынын арасынан эн коп символ камтыган owner_ди жана анын уйун(House) чыгар.

-- 2. Уйлордун баалары 1500, 2000 дин аралыгында бар болсо true чыгар, жок болсо false чыгар.
select true
from houses h
where price between 1500 and 2000;
-- 3. id_лери 5, 6, 7, 8, 9, 10 го барабар болгон адресстерди жана ал адрессте кайсы уйлор бар экенин чыгар.
select *
from houses h
         join addresses a on h.address_id = a.id
where address_id in (5, 6, 7, 8, 9, 10);
-- 4. Бардык уйлорду, уйдун ээсинин атын, клиенттин атын, агенттин атын чыгар.
select h.house_type, c.first_name, a.name
from houses h
         join rent_info r on r.house_id = h.id
         join customers c on c.id = r.customer_id
         join owners o on o.id = h.owner_id
         join agencies a on a.id = r.agency_id;
-- 5. Клиенттердин 10-катарынан баштап 1999-жылдан кийин туулган 15 клиентти чыгар.
select first_name
from customers
where date_of_birth = '1999-1-1'
group by first_name
limit 15 offset 10;
-- 6. Рейтинги боюнча уйлорду сорттоп, уйлордун тайптарын, рейтингин жана уйдун ээлерин чыгар. (asc and desc)
-- 7. Уйлордун арасынан квартиралардын (apartment) санын жана алардын баасынын суммасын чыгар.
select count(*), sum(price)
from houses
where house_type = 'Apartment';
-- 8. Агентсволардын арасынан аты ‘My_House’ болгон агентсвоны, агентсвонын адресин жана анын бардык уйлорун, уйлордун адрессин чыгар.
select name, addresses, houses
from agencies join addresses on addresses.id = agencies.address_id
join houses on addresses.id = houses.address_id
where name = 'My_House';
-- 9. Уйлордун арасынан мебели бар уйлорду, уйдун ээсин жана уйдун адрессин чыгар.
select *from houses h
join addresses a on h.address_id = a.id
join owners o on h.owner_id = o.id
where furniture = true;
-- 10.Кленти жок уйлордун баарын жана анын адрессин жана ал уйлор кайсыл агентсвога тийешелуу экенин чыгар.
select *, ak from houses h
join addresses a on h.address_id = a.id
join owners o on h.owner_id = o.id
join agencies ak on ak.address_id = h.address_id;
-- 11.Клиенттердин улутуна карап, улутуну жана ал улуутта канча клиент жашайт санын чыгар.
-- 12.Уйлордун арасынан рейтингтери чон, кичине, орточо болгон 3 уйду чыгар.
-- 13.Уйлору жок киленттерди, клиенттери жок уйлорду чыгар.

-- 14.Уйлордун бааларынын орточо суммасын чыгар.
select avg(round(price))
from houses;
-- 15.‘A’ тамга менен башталган уйдун ээсинин аттарын, клиенттердин аттарын чыгар.

select first_name, last_name
from customers
where last_name like 'A%';

-- 16.Эн уйу коп owner_ди жана анын уйлорунун санын чыгар.

-- 17.Улуту Kyrgyzstan уй-булолу customerлерди чыгарыныз.
select nationality
from customers
where nationality = 'Kyrgyzstan';
-- 18.Эн коп болмолуу уйду жана анын адресин ал уй кайсыл owner таандык ошону чыгарыныз.
-- 19.Бишкекте  жайгашкан уйлорду жана клиентерин кошо чыгарыныз.
-- 20.Жендерине карап группировка кылыныз.
select   gender from owners group by gender;
-- 21.Эн коп моонотко ижарага алынган уйду чыгарыныз.
-- 22.Эн кымбат уйду жана анын ээсин чыгарыныз.
select o.first_name, max(price) from houses join owners o on houses.owner_id = o.id
group by o.first_name limit 1;
-- 23.Бир региондо жайгашкан баардык агентстволорду чыгарыныз
-- 24.Рейтинг боюнча эн популярдуу 5 уйду чыгар.
-- 25.Орто жаштагы owner_ди , анын уйун , уйдун адрессин чыгар.